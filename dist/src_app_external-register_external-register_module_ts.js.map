{"version":3,"file":"src_app_external-register_external-register_module_ts.js","mappings":"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","sources":["./src/app/external-register/external-register-routing.module.ts","./src/app/external-register/external-register.module.ts","./src/app/external-register/external-register.page.form.ts","./src/app/external-register/external-register.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ExternalRegisterPage } from './external-register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExternalRegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExternalRegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExternalRegisterPageRoutingModule } from './external-register-routing.module';\n\nimport { ExternalRegisterPage } from './external-register.page';\nimport { ErrorMessageModule } from '../components/error-message/error-message.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ExternalRegisterPageRoutingModule,\n    ReactiveFormsModule,\n    ErrorMessageModule\n  ],\n  declarations: [ExternalRegisterPage]\n})\nexport class ExternalRegisterPageModule {}\n","import { EmailValidator, FormBuilder, FormGroup, ValidatorFn, Validators } from \"@angular/forms\";\n\nexport class ExternalRegisterPageForm{\n\n    private formBuilder: FormBuilder;\n    private extRegisterForm: FormGroup;\n    private email: String;\n    private provider: String;\n    private providerID: String;\n\n    constructor(email: String, provider: String, providerID: String, formBuilder: FormBuilder){\n        this.email = email; \n        this.provider = provider;\n        this.providerID = providerID;\n        this.formBuilder = formBuilder;\n        this.extRegisterForm = this.createForm(this.email, this.provider, this.providerID);\n    }\n\n    createForm(email, provider, provID):FormGroup {\n        console.log(\"CreateForm\")\n        this.extRegisterForm = this.formBuilder.group({\n            email:[email],\n            provider: [provider],\n            username: ['', [Validators.required]],\n            bio: ['', [Validators.required, Validators.maxLength(200)]],\n            workLevel: ['', [Validators.required]],\n            telegram: ['', [Validators.required]],\n            providerID: [provID]\n        });\n        console.log(this.extRegisterForm.value)\n        return this.extRegisterForm;\n    }\n\n    getForm():FormGroup {\n        return this.extRegisterForm;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ExternalRegisterPageForm } from './external-register.page.form';\nimport { AuthApiService } from './../service/api.authService';\nimport { AlertController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-external-register',\n  templateUrl: './external-register.page.html',\n  styleUrls: ['./external-register.page.scss'],\n})\nexport class ExternalRegisterPage implements OnInit {\n  \n  extRegisterForm: ExternalRegisterPageForm;\n  isSubmitted = false;\n  email: String;\n  provider: String;\n  providerID: String;\n\n  constructor(\n    private router: Router, \n    private formbuilder: FormBuilder, \n    private authApiService: AuthApiService,\n    private alertController: AlertController\n  ) {\n    console.log(this.email = this.router.getCurrentNavigation().extras.state.email.toLowerCase());\n    console.log(this.provider = this.router.getCurrentNavigation().extras.state.provider);\n    console.log(this.providerID = this.router.getCurrentNavigation().extras.state.providerID);\n  }\n\n  ngOnInit() {\n    this.createForm();\n  }\n\n  async extRegister(){\n    console.log('external-register')\n    this.isSubmitted = true;\n    if(!this.extRegisterForm.getForm().valid) {\n      console.log(\"Invalid registration\")\n    } else {\n      console.log(this.extRegisterForm.getForm().value)\n      try{\n        await this.authApiService.register(this.extRegisterForm.getForm().value).subscribe(\n          async dataR => {\n            console.log(dataR);\n            if(dataR.success){\n              localStorage.setItem('userID', JSON.stringify(dataR.userID));\n              this.presentAlert('Registration Successful', 'Hi '+ this.extRegisterForm.getForm().get('username').value + \"! Enjoy your StudyJio experience\" )\n              this.router.navigate(['tabs'])\n            }\n            else{\n              await this.presentAlert('Unsuccessful Registration', dataR.message)\n              this.router.navigate(['login'])\n            }\n          }\n        )\n      } catch(error) {console.log(error)}\n    }\n    this.router.navigate(['tabs']);\n  }\n\n  private createForm(){\n    console.log(this.email, this.provider, this.providerID, \"createForm\")\n    this.extRegisterForm = new ExternalRegisterPageForm(this.email, this.provider, this.providerID, this.formbuilder)\n  }\n\n  async presentAlert(h, b){\n    const alert = await this.alertController.create({\n      header: h,\n      subHeader: b,\n      buttons: ['Dismiss']\n    });\n    await alert.present();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}