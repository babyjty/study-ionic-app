{"version":3,"file":"src_app_forget_forget_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEZ;AAE3C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oDAAU;KACtB;CACF,CAAC;IAMW,uBAAuB,SAAvB,uBAAuB;CAAG;AAA1B,uBAAuB;IAJnC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBK;AACM;AACmB;AAErB;AAEqB;AAEvB;AAC2C;IAazE,gBAAgB,SAAhB,gBAAgB;CAAG;AAAnB,gBAAgB;IAX5B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,2EAAuB;YACvB,+DAAmB;YACnB,8FAAkB;SACnB;QACD,YAAY,EAAE,CAAC,oDAAU,CAAC;KAC3B,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;;;;ACtBuC;AAE7D,MAAM,cAAc;IAKvB,YAAY,WAAwB;QAChC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;IACxC,CAAC;IAED,UAAU;QACN,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5C,gJAAgJ;YAChJ,KAAK,EAAC,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,4DAAgB,CAAC,CAAC;SACtD,CAAC,CAAC;IACP,CAAC;IAED,OAAO;QACH,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;CAEJ;;;;;;;;;;;;;;;;;;;;;;;;;ACvBiD;AACL;AACJ;AACW;IAOvC,UAAU,SAAV,UAAU;IACrB,YACU,MAAc,EACd,WAAwB;QADxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QASlC,gBAAW,GAAG,KAAK,CAAC;QALlB,mBAAmB;IACrB,CAAC;IAKD,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAG,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE;YACnC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;SAC7B;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;SAC7C;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;IAEO,UAAU;QAChB,IAAI,CAAC,UAAU,GAAG,IAAI,6DAAc,CAAC,IAAI,CAAC,WAAW,CAAC;IACxD,CAAC;CACF;;YAtCQ,mDAAM;YADN,uDAAW;;AASP,UAAU;IALtB,wDAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,mEAAiC;;KAElC,CAAC;GACW,UAAU,CA8BtB;AA9BsB","sources":["./src/app/forget/forget-routing.module.ts","./src/app/forget/forget.module.ts","./src/app/forget/forget.page.form.ts","./src/app/forget/forget.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ForgetPage } from './forget.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgetPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ForgetPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ForgetPageRoutingModule } from './forget-routing.module';\n\nimport { ForgetPage } from './forget.page';\nimport { ErrorMessageModule } from '../components/error-message/error-message.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ForgetPageRoutingModule,\n    ReactiveFormsModule,\n    ErrorMessageModule\n  ],\n  declarations: [ForgetPage]\n})\nexport class ForgetPageModule {}\n","import { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\nexport class ForgetPageForm{\n\n    private formBuilder: FormBuilder;\n    private forgetForm: FormGroup;\n\n    constructor(formBuilder: FormBuilder){\n        this.formBuilder = formBuilder;\n        this.forgetForm = this.createForm();\n    }\n\n    createForm():FormGroup {\n        return this.forgetForm = this.formBuilder.group({\n            // This function receives objects that will inform the properties of the form that we want to create & also how each property will be validated \n            email:['', [Validators.required, Validators.email]],\n        });\n    }\n\n    getForm():FormGroup{\n        return this.forgetForm;\n    }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ForgetPageForm } from './forget.page.form';\n\n@Component({\n  selector: 'app-forget',\n  templateUrl: './forget.page.html',\n  styleUrls: ['./forget.page.scss'],\n})\nexport class ForgetPage implements OnInit {\n  constructor(\n    private router: Router, \n    private formBuilder: FormBuilder,\n    // private ngZone: ngZone,\n    // private apiService: ApiService\n  ) { \n    // this.mainForm();\n  }\n  // submit = false;\n\n  forgetForm: ForgetPageForm;\n  isSubmitted = false;\n  ngOnInit() {\n    this.createForm();\n  }\n\n  confirm(){\n    this.isSubmitted = true;\n    if(!this.forgetForm.getForm().valid) {\n      console.log(\"Invalid email\")\n    } else {\n      console.log(this.forgetForm.getForm().value)\n    }\n    this.router.navigate(['loading']);\n  }\n\n  private createForm() {\n    this.forgetForm = new ForgetPageForm(this.formBuilder)\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}