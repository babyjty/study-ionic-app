{"version":3,"file":"src_app_spot-details_spot-details_module_ts.js","mappings":"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","sources":["./src/app/service/google-places-api.service.ts","./src/app/spot-details/spot-details-routing.module.ts","./src/app/spot-details/spot-details.module.ts","./src/app/spot-details/spot-details.page.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GooglePlacesAPIService {\n\n  constructor(public http:HttpClient) {}\n\n  getLocations( radius:number, locationCoord:String ){\n    return this.http.get(`http://localhost:3000/api/locations/search?radius=${radius}&location=${locationCoord}`);\n  }\n\n  getDistance( origin:String, destination:String){\n    return this.http.get(`http://localhost:3000/api/locations/distance?origin=${origin}&destination=${destination}`);\n  }\n\n  getPlaceSearch( text:String ){\n    return this.http.get(`http://localhost:3000/api/locations/placesearch?text=${text}`);\n  }\n\n  getPlaceCoordinates( placeID:String ){\n    return this.http.get(`http://localhost:3000/api/locations/placecoordinates?placeid=${placeID}`);\n  }\n\n  getPlaceDetails( placeID:String ){\n    return this.http.get(`http://localhost:3000/api/locations/placedetails?placeid=${placeID}`);\n  } \n\n  getPlacePhoto( photoRef:String, width:number){\n    return this.http.get(`http://localhost:3000/api/locations/placephoto?photoRef=${photoRef}&width=${width}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SpotDetailsPage } from './spot-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SpotDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SpotDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SpotDetailsPageRoutingModule } from './spot-details-routing.module';\n\nimport { SpotDetailsPage } from './spot-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SpotDetailsPageRoutingModule\n  ],\n  declarations: [SpotDetailsPage]\n})\nexport class SpotDetailsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { GooglePlacesAPIService } from '../service/google-places-api.service';\nimport { SpotPage } from '../spot/spot.page';\nimport { Geolocation } from '@awesome-cordova-plugins/geolocation/ngx';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-spot-details',\n  templateUrl: './spot-details.page.html',\n  styleUrls: ['./spot-details.page.scss'],\n})\nexport class SpotDetailsPage implements OnInit {\n\n  place_id: string;\n  linearDistance: string;\n  src: string;\n  lat: string;\n  lng: string;\n  spotDetails: any;\n  currentLoc: any = [];\n\n  constructor(public api:GooglePlacesAPIService, private geolocation: Geolocation, private router: Router) {\n    // this.getCurrentLocation()\n   }\n\n  getCurrentLocation() {\n    this.geolocation.getCurrentPosition().then((resp) => {\n      this.currentLoc = [{\n        latitude:resp.coords.latitude,\n        longitude:resp.coords.longitude\n      }];    \n     }).catch((error) => {\n       console.log('Error getting location', error);\n     });\n\n  }\n\n  ngOnInit() {\n    this.place_id = sessionStorage.getItem(\"place_id\")\n    this.linearDistance = sessionStorage.getItem('linearDistance');\n    this.src = sessionStorage.getItem('src');\n    this.lat = sessionStorage.getItem('lat');\n    this.lng = sessionStorage.getItem('lng');\n    this.fetchLocation(this.place_id);\n    this.getCurrentLocation();\n  }\n\n  fetchLocation(place_id:string){\n    let today = new Date().getDay()\n    this.api.getPlaceDetails(place_id).subscribe(result => {\n      console.log(result);\n      this.spotDetails = Array.of(result);\n      this.spotDetails[0].result.linearDistance = this.linearDistance;\n      this.spotDetails[0].result.src = this.src;\n      this.spotDetails[0].result.open = this.spotDetails[0].result.opening_hours.weekday_text[(today + 6) % 7];\n    })\n  }\n\n  navigateToPlace(){\n    // console.log(\"currentLoc \" + this.currentLoc[0])\n    window.open('https://www.google.com/maps/dir/?api=1&origin=' + this.currentLoc[0].latitude + ',' \n            + this.currentLoc[0].longitude + '&destination=' + this.lat + ',' + this.lng);\n  }\n\n  \n  createJio(){\n    console.log(this.spotDetails[0])\n    this.router.navigateByUrl('/create-jio', {state: {location: this.spotDetails[0], googleid: this.place_id}})\n    // this.router.navigateByUrl('/create-jio', {state: {address: this.spotDetails.result.formatted_address, name: this.spotDetails.result.name, rating: this.spotDetails.result.rating}})\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}